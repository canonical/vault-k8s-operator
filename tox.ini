# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
min_version = 4.0.0

[testenv]
runner = uv-venv-lock-runner
with_dev = true
set_env =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
allowlist_externals=*
deps =
    .

[vars]
unit_test_path = {toxinidir}/tests/unit/
lib_path = {toxinidir}/lib/
all_path = {[vars]unit_test_path} {[vars]lib_path}


[testenv:vendor-libs]
description = Fetches the lib from the root to the machine and k8s charm directories
commands =
    cp {toxinidir}/lib/juju_facade.py {toxinidir}/machine/lib/
    cp {toxinidir}/lib/vault_autounseal.py {toxinidir}/machine/lib/
    cp {toxinidir}/lib/vault_client.py {toxinidir}/machine/lib/
    cp {toxinidir}/lib/vault_helpers.py {toxinidir}/machine/lib/
    cp {toxinidir}/lib/vault_s3.py {toxinidir}/machine/lib/
    cp {toxinidir}/lib/vault_managers.py {toxinidir}/machine/lib/
    cp {toxinidir}/lib/juju_facade.py {toxinidir}/k8s/lib/
    cp {toxinidir}/lib/vault_autounseal.py {toxinidir}/k8s/lib/
    cp {toxinidir}/lib/vault_client.py {toxinidir}/k8s/lib/
    cp {toxinidir}/lib/vault_helpers.py {toxinidir}/k8s/lib/
    cp {toxinidir}/lib/vault_s3.py {toxinidir}/k8s/lib/
    cp {toxinidir}/lib/vault_managers.py {toxinidir}/k8s/lib/

[testenv:lint]
description = Check code against coding style standards
commands =
    codespell {[vars]all_path}
    ruff check {[vars]all_path}
    ruff format --check {[vars]all_path}

[testenv:static]
description = Run static type checks
commands =
    pyright {[vars]all_path} {posargs}

[testenv:unit]
description = Run unit tests
commands =
    coverage run --source={[vars]lib_path} -m pytest {[vars]unit_test_path} -v --tb native -s {posargs}
    coverage report
